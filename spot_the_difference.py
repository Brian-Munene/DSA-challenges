from collections import Counter
import cProfile, pstats, io
from pstats import SortKey

pr = cProfile.Profile()
pr.enable()

def spot_the_difference(s: str, t: str)-> str:
    """
    You are given two strings, s and t which only consist of lowercase letters. 
    t is generated by shuffling the letters in s as well as potentially adding an additional random character.
    Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘. 
    Note: You may assume that at most one additional character can be added to t. 

    Example: Given the following strings...

    s = "foobar", t = "barfoot", return 't'
    s = "ide", t = "idea", return 'a'
    s = "coding", t "ingcod", return ''
    """

    s_count = Counter(s)
    t_count = Counter(t)
    diff = ''
    for char in t:
        if char in s and s_count[char] != t_count[char]:
            cnt = abs(s_count[char] - t_count[char])
            diff += 'char' * cnt
        elif char not in s:
            diff += char
    return diff

if __name__ == '__main__':
    vals = [["foobar","barfoott"], ["ide", "idea"], ["coding", "ingcod"]]

    for val in vals:
        print(f"s = {val[0]}, t = {val[1]}, difference = {spot_the_difference(s=val[0], t=val[1])}")

pr.disable()
s = io.StringIO()
sortby = SortKey.CUMULATIVE
ps = pstats.Stats(pr, stream=s).sort_stats(sortby)         
pr.print_stats()